// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: sys_apis_service.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_sys_apis_service_proto protoreflect.FileDescriptor

var file_sys_apis_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70,
	0x69, 0x73, 0x1a, 0x14, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x32, 0xe5, 0x03, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x41, 0x70, 0x69, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x53, 0x79, 0x73,
	0x41, 0x70, 0x69, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x4c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x11, 0x2e, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x70,
	0x69, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x54, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x53, 0x79, 0x73,
	0x41, 0x70, 0x69, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x4c, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x53,
	0x79, 0x73, 0x41, 0x70, 0x69, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x73, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x48, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12,
	0x11, 0x2e, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x70,
	0x69, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x73, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x3a, 0x01,
	0x2a, 0x12, 0x49, 0x0a, 0x05, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x41,
	0x70, 0x69, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x0d, 0x5a, 0x0b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var file_sys_apis_service_proto_goTypes = []interface{}{
	(*SysApis)(nil),   // 0: sys_apis.SysApis
	(*Request)(nil),   // 1: common.Request
	(*Response)(nil),  // 2: common.Response
	(*Responses)(nil), // 3: common.Responses
}
var file_sys_apis_service_proto_depIdxs = []int32{
	0, // 0: sys_apis.SysApisService.Create:input_type -> sys_apis.SysApis
	0, // 1: sys_apis.SysApisService.Delete:input_type -> sys_apis.SysApis
	0, // 2: sys_apis.SysApisService.DeleteById:input_type -> sys_apis.SysApis
	0, // 3: sys_apis.SysApisService.Update:input_type -> sys_apis.SysApis
	0, // 4: sys_apis.SysApisService.Find:input_type -> sys_apis.SysApis
	1, // 5: sys_apis.SysApisService.Lists:input_type -> common.Request
	2, // 6: sys_apis.SysApisService.Create:output_type -> common.Response
	2, // 7: sys_apis.SysApisService.Delete:output_type -> common.Response
	2, // 8: sys_apis.SysApisService.DeleteById:output_type -> common.Response
	2, // 9: sys_apis.SysApisService.Update:output_type -> common.Response
	2, // 10: sys_apis.SysApisService.Find:output_type -> common.Response
	3, // 11: sys_apis.SysApisService.Lists:output_type -> common.Responses
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sys_apis_service_proto_init() }
func file_sys_apis_service_proto_init() {
	if File_sys_apis_service_proto != nil {
		return
	}
	file_sys_apis_model_proto_init()
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_apis_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_apis_service_proto_goTypes,
		DependencyIndexes: file_sys_apis_service_proto_depIdxs,
	}.Build()
	File_sys_apis_service_proto = out.File
	file_sys_apis_service_proto_rawDesc = nil
	file_sys_apis_service_proto_goTypes = nil
	file_sys_apis_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SysApisServiceClient is the client API for SysApisService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SysApisServiceClient interface {
	Create(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error)
	Delete(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error)
	DeleteById(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error)
	Update(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error)
	Find(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error)
	Lists(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Responses, error)
}

type sysApisServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSysApisServiceClient(cc grpc.ClientConnInterface) SysApisServiceClient {
	return &sysApisServiceClient{cc}
}

func (c *sysApisServiceClient) Create(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/sys_apis.SysApisService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysApisServiceClient) Delete(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/sys_apis.SysApisService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysApisServiceClient) DeleteById(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/sys_apis.SysApisService/DeleteById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysApisServiceClient) Update(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/sys_apis.SysApisService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysApisServiceClient) Find(ctx context.Context, in *SysApis, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/sys_apis.SysApisService/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysApisServiceClient) Lists(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Responses, error) {
	out := new(Responses)
	err := c.cc.Invoke(ctx, "/sys_apis.SysApisService/Lists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SysApisServiceServer is the server API for SysApisService service.
type SysApisServiceServer interface {
	Create(context.Context, *SysApis) (*Response, error)
	Delete(context.Context, *SysApis) (*Response, error)
	DeleteById(context.Context, *SysApis) (*Response, error)
	Update(context.Context, *SysApis) (*Response, error)
	Find(context.Context, *SysApis) (*Response, error)
	Lists(context.Context, *Request) (*Responses, error)
}

// UnimplementedSysApisServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSysApisServiceServer struct {
}

func (*UnimplementedSysApisServiceServer) Create(context.Context, *SysApis) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSysApisServiceServer) Delete(context.Context, *SysApis) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedSysApisServiceServer) DeleteById(context.Context, *SysApis) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteById not implemented")
}
func (*UnimplementedSysApisServiceServer) Update(context.Context, *SysApis) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedSysApisServiceServer) Find(context.Context, *SysApis) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedSysApisServiceServer) Lists(context.Context, *Request) (*Responses, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lists not implemented")
}

func RegisterSysApisServiceServer(s *grpc.Server, srv SysApisServiceServer) {
	s.RegisterService(&_SysApisService_serviceDesc, srv)
}

func _SysApisService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysApis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysApisServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sys_apis.SysApisService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysApisServiceServer).Create(ctx, req.(*SysApis))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysApisService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysApis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysApisServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sys_apis.SysApisService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysApisServiceServer).Delete(ctx, req.(*SysApis))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysApisService_DeleteById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysApis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysApisServiceServer).DeleteById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sys_apis.SysApisService/DeleteById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysApisServiceServer).DeleteById(ctx, req.(*SysApis))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysApisService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysApis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysApisServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sys_apis.SysApisService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysApisServiceServer).Update(ctx, req.(*SysApis))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysApisService_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysApis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysApisServiceServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sys_apis.SysApisService/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysApisServiceServer).Find(ctx, req.(*SysApis))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysApisService_Lists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysApisServiceServer).Lists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sys_apis.SysApisService/Lists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysApisServiceServer).Lists(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _SysApisService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sys_apis.SysApisService",
	HandlerType: (*SysApisServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SysApisService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _SysApisService_Delete_Handler,
		},
		{
			MethodName: "DeleteById",
			Handler:    _SysApisService_DeleteById_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _SysApisService_Update_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _SysApisService_Find_Handler,
		},
		{
			MethodName: "Lists",
			Handler:    _SysApisService_Lists_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sys_apis_service.proto",
}
